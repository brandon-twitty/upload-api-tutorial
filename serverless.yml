# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: candidate-service
frameworkVersion: ">=1.1.0 <2.0.0"
provider:
  name: aws
  runtime: nodejs12.x
  profile: serverless
  region: us-east-1
  environment:
    tableName: ${self:custom.tableName}
    bucketName: ${self:custom.bucketName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - s3:*

      Resource: '*'
plugins:
  - serverless-s3-sync
  - serverless-webpack
#  - serverless-bundle
package:
  individually: true

custom:
  tableName: candidate
  bucketName:
    s3Sync:
      - bucketName: myserverless-bucket (feakalink)
        localDir: UploadData
functions:
  candidateSubmission:
    handler: lambdas/endpoints/candidate.submit
    memorySize: 128
    description: Submit candidate information and starts interview process.
    events:
      - http:
          path: candidates
          method: post
 # getUser:
  #  handler: lambdas/endpoints/getUser.handler
   # events:
    #  - http:
     #     path: get-user/{ID}
      #    method: GET
       #   cors: true
  createFile:
    handler: lambdas/endpoints/createFile.handler
    events:
      - http:
          path: create-file/{fileName}
          method: POST
          cors: true
  getFile:
    handler: lambdas/endpoints/getFile.handler
    events:
      - http:
          path: get-file/{fileName}
          method: GET
          cors: true

resources:
  Resources:
        #database
    CandidatesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"
        KeySchema:
           -
             AttributeName: "id"
             KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
          StreamSpecification:
            StreamViewType: "NEW_AND_OLD_IMAGES"
        BillingMode: PAY_PER_REQUEST
        TableName:  ${self:custom.tableName}
